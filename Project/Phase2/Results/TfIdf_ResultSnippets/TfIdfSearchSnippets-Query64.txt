
<document>
<qid>64<\qid>
<rank>1<\rank>
<doc>CACM-2651<\doc>
<snippet>
Treatment of <b>Data<\b> Types in EL1In constructing 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>2<\rank>
<doc>CACM-2513<\doc>
<snippet>
the newnodes into which the list is to be moved, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>3<\rank>
<doc>CACM-1878<\doc>
<snippet>
by SLIP is that reentrant list structures are not recovered 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>4<\rank>
<doc>CACM-1853<\doc>
<snippet>
convenient, the Swym system permitsa list to be chained, compact, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>5<\rank>
<doc>CACM-1972<\doc>
<snippet>
Compacting Algorithm A simple nonrecursive list structure compacting <b>scheme<\b> or 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>6<\rank>
<doc>CACM-1957<\doc>
<snippet>
Construct for <b>Evaluating<\b> Set ExpressionsThe list set generator is defined 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>7<\rank>
<doc>CACM-0204<\doc>
<snippet>
Theorems by Pattern <b>Recognition<\b> ICACM April, 1960Wang, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>8<\rank>
<doc>CACM-1459<\doc>
<snippet>
for Real-Time LanguagesReal-time languages <b>have<\b> different requirementsfrom 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>9<\rank>
<doc>CACM-3188<\doc>
<snippet>
  Semiotics and Programming <b>Languages<\b>  
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>10<\rank>
<doc>CACM-0171<\doc>
<snippet>
Computers <b>in<\b> Universities (Part I) CACM July, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>11<\rank>
<doc>CACM-0527<\doc>
<snippet>
concept is described by a list structure.  A one-to-one 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>12<\rank>
<doc>CACM-1051<\doc>
<snippet>
List <b>ItemsThe<\b> list concept as originally proposed 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>13<\rank>
<doc>CACM-2723<\doc>
<snippet>
garbage collection and for standard list processing primitivesare presented and 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>14<\rank>
<doc>CACM-1050<\doc>
<snippet>
Parts Breakdown <b>Technique<\b> Using List StructuresList structured 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>15<\rank>
<doc>CACM-0627<\doc>
<snippet>
List StructuresCACM March, 1962Weizenbaum, J.CA620305 JB March 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>16<\rank>
<doc>CACM-0200<\doc>
<snippet>
Function I, Asymptotic Expansion (Algorithm <b>6)CACM<\b> April, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>17<\rank>
<doc>CACM-0201<\doc>
<snippet>
Funtion I, Series Expansion (Algorithm 5)CACM April, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>18<\rank>
<doc>CACM-3028<\doc>
<snippet>
Manchester Mark <b>I<\b> and Atlas: A His 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>19<\rank>
<doc>CACM-1024<\doc>
<snippet>
Note on the Formation <b>of<\b> Free ListCACM 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>20<\rank>
<doc>CACM-0210<\doc>
<snippet>
Functions of Symbolic Expressionsand Their Computation <b>by<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>21<\rank>
<doc>CACM-2772<\doc>
<snippet>
Maintenance of <b>the<\b> Opportunity Listfor Class-Teacher Timetable 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>22<\rank>
<doc>CACM-0793<\doc>
<snippet>
List StructuresCACM <b>August,<\b> 1963Baecker, H. D.CA630805 JB 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>23<\rank>
<doc>CACM-1390<\doc>
<snippet>
programming language is described whichis applicable <b>to<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>24<\rank>
<doc>CACM-2855<\doc>
<snippet>
algorithm is presented for movingarbitrary list structures, using no storage 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>25<\rank>
<doc>CACM-0452<\doc>
<snippet>
of for Statement I (Algorithm 137)CACM November, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>26<\rank>
<doc>CACM-1549<\doc>
<snippet>
an essential part of any list processing system.  In 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>27<\rank>
<doc>CACM-0367<\doc>
<snippet>
non-topological system.  Given a list of these lines in 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>28<\rank>
<doc>CACM-1035<\doc>
<snippet>
allows suitablemixtures, in an input/output list or in an expression, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>29<\rank>
<doc>CACM-0717<\doc>
<snippet>
Algorithms for Finite SetsThe partitions <b>of<\b> a 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>30<\rank>
<doc>CACM-0497<\doc>
<snippet>
Remarks on Line Segment Curve-Fitting Using Dynamic 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>31<\rank>
<doc>CACM-3112<\doc>
<snippet>
on a Serial ComputerA real-time list processing system is onein 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>32<\rank>
<doc>CACM-1424<\doc>
<snippet>
black diagrams of digital circuitsto list structures is described, together 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>33<\rank>
<doc>CACM-1588<\doc>
<snippet>
List ProcessingThe concepts of list processing have been introducedinto 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>34<\rank>
<doc>CACM-1614<\doc>
<snippet>
complex numbers, file processing, and list manipulation.CACM April, 1967Galler, B. 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>35<\rank>
<doc>CACM-0731<\doc>
<snippet>
List Processor A list processing system in <b>which<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>36<\rank>
<doc>CACM-2361<\doc>
<snippet>
Note on Cheney's Nonrecursive List-Compacting AlgorithmCACM April, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>37<\rank>
<doc>CACM-3106<\doc>
<snippet>
presented for copying an arbitrarilylinked list structure into a block 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>38<\rank>
<doc>CACM-3202<\doc>
<snippet>
 <b><\b> <b>MANIP:<\b> <b>A<\b> <b>Computer<\b> <b>System<\b> <b>for<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>39<\rank>
<doc>CACM-1456<\doc>
<snippet>
that, although LISP and other list processing languages are ideally 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>40<\rank>
<doc>CACM-2766<\doc>
<snippet>
Cyclic List Structures in Linear Time Using 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>41<\rank>
<doc>CACM-2767<\doc>
<snippet>
mostpromising algorithm uses the indexed list concept.  It will 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>42<\rank>
<doc>CACM-0595<\doc>
<snippet>
to <b>Teaching<\b> COBOLThe teaching of COBOL can 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>43<\rank>
<doc>CACM-0482<\doc>
<snippet>
List Processor for the Philco 200 ComputerCACM 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>44<\rank>
<doc>CACM-0572<\doc>
<snippet>
Item to <b>Chain-Linked<\b> List (Algorithm 100)CACM June, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>45<\rank>
<doc>CACM-0573<\doc>
<snippet>
Item From <b>Chain-Linked<\b> List (Algorithm 101)CACM June, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>46<\rank>
<doc>CACM-1389<\doc>
<snippet>
a new programming language for list structure manipulations.  <b>It<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>47<\rank>
<doc>CACM-3069<\doc>
<snippet>
Practical Interprocedural Data Flow Analysis AlgorithmA new 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>48<\rank>
<doc>CACM-2838<\doc>
<snippet>
avoidssuspending the operations of <b>a<\b> list processor for the long 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>49<\rank>
<doc>CACM-1046<\doc>
<snippet>
Compiler-Building System Developed by Brooker and MorrisIn 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>50<\rank>
<doc>CACM-1231<\doc>
<snippet>
OptimizationRedundant instructions may be discarded duringthe final 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>51<\rank>
<doc>CACM-2409<\doc>
<snippet>
Algorithm for the Approximate Solutionof Wiener-Hopf <b>Integral<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>52<\rank>
<doc>CACM-1861<\doc>
<snippet>
MAD Definition FacilityOne of the <b>first<\b> definition 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>53<\rank>
<doc>CACM-0069<\doc>
<snippet>
Programs for the IBM <b>650-Part<\b> IA collection 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>54<\rank>
<doc>CACM-3189<\doc>
<snippet>
  An Algebraic Compiler <b>for<\b> the 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>55<\rank>
<doc>CACM-2199<\doc>
<snippet>
Sparse Matrix Package (Part I) [F4] (Algorithm 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>56<\rank>
<doc>CACM-2156<\doc>
<snippet>
<b>on<\b> Cheney's List-Compaction AlgorithmCACM September, 1971Fenichel, R. 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>57<\rank>
<doc>CACM-2857<\doc>
<snippet>
EdgeAn edge reference into a list <b>structure<\b> is a pairof 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>58<\rank>
<doc>CACM-2168<\doc>
<snippet>
different sizes <b>and<\b> configurations of list cells, possibly not specified 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>59<\rank>
<doc>CACM-1248<\doc>
<snippet>
the Automatic Simplification of Computer <b>ProgramsPresented<\b> in 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>60<\rank>
<doc>CACM-2177<\doc>
<snippet>
represented either (i) as anordered list of edges or (ii) 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>61<\rank>
<doc>CACM-1821<\doc>
<snippet>
Function of <b>a<\b> Square Matrix I and 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>62<\rank>
<doc>CACM-2484<\doc>
<snippet>
Note on Information Organization and StorageSince <b>the<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>63<\rank>
<doc>CACM-2986<\doc>
<snippet>
<b>on<\b> Sparse RelationsVarious computations on relations, Boolean 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>64<\rank>
<doc>CACM-1608<\doc>
<snippet>
<b>Integration<\b> of Function That Has a PoleIt 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>65<\rank>
<doc>CACM-1013<\doc>
<snippet>
Examination SchedulingA method for <b>scheduling<\b> final examinationsto 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>66<\rank>
<doc>CACM-2905<\doc>
<snippet>
Hashing Functions: A SingleProbe Retrieving Method <b>for<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>67<\rank>
<doc>CACM-3054<\doc>
<snippet>
<b>Quicksort<\b> ProgramsThis paper is a practical study 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>68<\rank>
<doc>CACM-2039<\doc>
<snippet>
Function of a Square Matrix I and 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>69<\rank>
<doc>CACM-0143<\doc>
<snippet>
List of Computer Systems Programs <b>forthe<\b> IBM 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>70<\rank>
<doc>CACM-0726<\doc>
<snippet>
General <b>Program<\b> for the Analysis ofSquare and 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>71<\rank>
<doc>CACM-1382<\doc>
<snippet>
Computer Impact on <b>Undergraduate<\b> Mathematics Three matters 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>72<\rank>
<doc>CACM-2725<\doc>
<snippet>
Comparison of Simulation Event List <b>Algorithms<\b> <b>(Corrigendum)CACM<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>73<\rank>
<doc>CACM-2470<\doc>
<snippet>
Axiomatic Basis <b>for<\b> Program SemanticsA formal system 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>74<\rank>
<doc>CACM-2998<\doc>
<snippet>
in LispStatic measurements of the list structure offive large Lisp 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>75<\rank>
<doc>CACM-2882<\doc>
<snippet>
Stochastic Evaluation <b>Model<\b> for DatabaseOrganization in Data 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>76<\rank>
<doc>CACM-2491<\doc>
<snippet>
CodeThe concept of "threaded code" <b>is<\b> presented 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>77<\rank>
<doc>CACM-3144<\doc>
<snippet>
Model for and DIscussion <b>of<\b> Multi-Interpreter SystemsA 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>78<\rank>
<doc>CACM-2456<\doc>
<snippet>
the <b>Capabilities<\b> of While, Repeat, and Exit 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>79<\rank>
<doc>CACM-1306<\doc>
<snippet>
<b>Class<\b> of Unambiguous Computer LanguagesDiscussed in this 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>80<\rank>
<doc>CACM-1465<\doc>
<snippet>
Translation Viewed as <b>a<\b> <b>General<\b> <b>Data<\b> <b>Processing<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>81<\rank>
<doc>CACM-1264<\doc>
<snippet>
uncondensed object decks, executeuser's program, list card input to a 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>82<\rank>
<doc>CACM-2609<\doc>
<snippet>
with <b>Rounded<\b> Ramp FunctionsA new interpolation function 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>83<\rank>
<doc>CACM-2927<\doc>
<snippet>
New Upper Bounds <b>on<\b> the Generation of 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>84<\rank>
<doc>CACM-0409<\doc>
<snippet>
An Environment for a CompilerA <b>flexible,<\b> large-scale 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>85<\rank>
<doc>CACM-1653<\doc>
<snippet>
Performance Evaluation: <b>Survey<\b> and AppraisalThe state of 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>86<\rank>
<doc>CACM-0457<\doc>
<snippet>
Mechanical <b>Integrals<\b> Over all Slater-Type IntegralsCACM November, 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>87<\rank>
<doc>CACM-1489<\doc>
<snippet>
Documentation and Decision TablesIn <b>business<\b> data processing 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>88<\rank>
<doc>CACM-1216<\doc>
<snippet>
Derivatives Without List Processing, Subroutines, or RecursionA 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>89<\rank>
<doc>CACM-2390<\doc>
<snippet>
Proposal for a Computer-Based Interactive <b>Scientific<\b> CommunityBecause 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>90<\rank>
<doc>CACM-3142<\doc>
<snippet>
Difficulties With Computerized Transactions: An <b>Empirical<\b> InvestigationThe 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>91<\rank>
<doc>CACM-0949<\doc>
<snippet>
and Signed <b>Constants<\b> in ALGOLA few remarks 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>92<\rank>
<doc>CACM-1464<\doc>
<snippet>
ALGOL Compiler: Construction <b>and<\b> Usein Relation to 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>93<\rank>
<doc>CACM-1432<\doc>
<snippet>
of Nonstandard Input/Output Devices into FORTRAN SystemsA 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>94<\rank>
<doc>CACM-0598<\doc>
<snippet>
COBOL Librarian - A Key to Object 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>95<\rank>
<doc>CACM-2920<\doc>
<snippet>
Interpretation of the Deadlock Avoidance ProblemThe deadlock 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>96<\rank>
<doc>CACM-2232<\doc>
<snippet>
Width at <b>a<\b> <b>Given<\b> <b>AngleThat<\b> <b>the<\b> <b>pattern<\b> 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>97<\rank>
<doc>CACM-1911<\doc>
<snippet>
Coordination Reduction and Sentence AnalysisA class of 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>98<\rank>
<doc>CACM-1643<\doc>
<snippet>
<b>Improvement<\b> to Iterative Methods of Polynomial FactorizationMethods 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>99<\rank>
<doc>CACM-2309<\doc>
<snippet>
in the Instructional <b>Process:Directions<\b> for Research and 
<\snippet>
<\document>

<document>
<qid>64<\qid>
<rank>100<\rank>
<doc>CACM-2137<\doc>
<snippet>
Also, a new means of list representation is used: "local 
<\snippet>
<\document>
